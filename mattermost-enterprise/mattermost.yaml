namespace: mattermost-enterprise

database:
  defines: runnable
  inherits: postgres/12
  variables:
    db-user:
      value: <- `${db-user}`
    db-password:
      value: <- `${db-password}`
    db-name:
      value: <- `${db-name}`

nginx:
  defines: runnable
  inherits: nginx
  files:
    server-def:
      contents: |
        server {
            listen 0.0.0.0:{{ v "listen-port" }};
            return 404;
        }      
        server {
          listen 0.0.0.0:{{ v "listen-port" }};
          server_name {{ v "server-name" }};
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:{{ v "proxy-target-port" }};
          }
        }
      mode: 511
      path: /opt/bitnami/nginx/conf/server_blocks/reverse_proxy.conf
      container: nginx-reverse-proxy
  containers:
    defines: containers
    nginx-reverse-proxy:
      image-tag: <- `${nginx-image}`
      image: docker.io/bitnami/nginx
      ports:
      - <- `0.0.0.0:${listen-port}:${listen-port}/tcp`
  variables:
    proxy-target-host:
      value: <- get-hostname("mattermost-enterprise/mattermost", "mattermost") split(".dns.podman") join("")
      type: string
    listen-port:
      value: <- $nginx-listen-port
      type: string
    server-name:
      value: <- $nginx-server-name
      type: string
    proxy-target-port:
      value: "8065"
      type: string
    nginx-image:
      value: <- $nginx-image-tag
      type: string


mattermost:
  defines: runnable
  containers:
    defines: containers
    mattermost:
      image:  mattermost/mattermost-enterprise-edition
      image-tag: <- `${MATTERMOST_IMAGE}`
      paths:
        - <- `${moncc-volume-path}/mattermost/${MATTERMOST_CONFIG_PATH}:/var/lib/mattermost/config`
        - <- `${moncc-volume-path}/mattermost/${MATTERMOST_DATA_PATH}:/var/lib/mattermost/data`
        - <- `${moncc-volume-path}/mattermost/${MATTERMOST_LOGS_PATH}:/var/lib/mattermost/logs`
        - <- `${moncc-volume-path}/mattermost/${MATTERMOST_PLUGINS_PATH}:/var/lib/mattermost/plugins`
        - <- `${moncc-volume-path}/mattermost/${MATTERMOST_CLIENT_PLUGINS_PATH}:/var/lib/mattermost/client/plugins`
        - <- `${moncc-volume-path}/mattermost/${MATTERMOST_BLEVE_INDEXES_PATH}:/var/lib/mattermost/bleve-indexes`                           
      ports:
        - 8065
  depends:
    wait-for:
      runnables:
        - mattermost-enterprise/database
        - mattermost-enterprise/nginx
      timeout: 30
  variables:
    defines: variables     
    TZ:
      env: TZ
      type: string
      value: "UTC"
    MM_SQLSETTINGS_DRIVERNAME:
      env: MM_SQLSETTINGS_DRIVERNAME
      type: string
      value: "postgres"
    MM_BLEVESETTINGS_INDEXDIR:
      env: MM_BLEVESETTINGS_INDEXDIR
      type: string
      value: "/mattermost/bleve-indexes"
    MM_SERVICESETTINGS_SITEURL:
      env: MM_SERVICESETTINGS_SITEURL
      type: string
      value: <- $mattermost-server-name
    MM_SQLSETTINGS_DATASOURCE:
      env: MM_SQLSETTINGS_DATASOURCE
      type: string
      value: <- `postgres://${db-user}:${db-password}@${db-host}:5432/${db-name}?sslmode=disable&connect_timeout=10`
    db-user:
      type: string
      value: <- `${db-user}`
    db-password:
      type: string
      value: <- `${db-password}`
    db-name:
      type: string
      value: <- `${db-name}`
    MATTERMOST_CONFIG_PATH:
      type: string
      value: "config"
    MATTERMOST_DATA_PATH:
      type: string
      value: "data"
    MATTERMOST_LOGS_PATH:
      type: string
      value: "logs"
    MATTERMOST_PLUGINS_PATH:
      type: string
      value: "plugins"
    MATTERMOST_CLIENT_PLUGINS_PATH:
      type: string
      value: "client/plugins"
    MATTERMOST_BLEVE_INDEXES_PATH:
      type: string
      value: "bleve-indexes"
    MATTERMOST_IMAGE:
      type: string
      value: <- `${mattermost-image-tag}`
    db-host:
      type: string
      value: <- get-hostname("mattermost-enterprise/database", "postgres") split(".dns.podman") join("")